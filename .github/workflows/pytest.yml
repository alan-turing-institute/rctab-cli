---

name: Pytest

on:
  pull_request:
    branches:
      - main

jobs:
  runner-job:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: Bootstrap poetry
        shell: bash
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Configure poetry
        shell: bash
        run: |
          python -m poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          python -m poetry install

      - name: Run pytest
        shell: bash
        run: |
          python -m poetry run pytest tests/
